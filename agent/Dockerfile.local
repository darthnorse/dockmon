# Build stage
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates

WORKDIR /build

# Copy shared module first
COPY shared/ ./shared/

# Copy agent go mod files
COPY agent/go.mod agent/go.sum ./

# Fix the replace directive to point to ./shared instead of ../shared
RUN sed -i 's|replace github.com/darthnorse/dockmon-shared => ../shared|replace github.com/darthnorse/dockmon-shared => ./shared|g' go.mod

# Download dependencies
RUN go mod download

# Copy agent source code
COPY agent/ ./

# Build binary
ARG VERSION=dev
ARG COMMIT=unknown
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-s -w -X main.version=${VERSION} -X main.commit=${COMMIT}" \
    -o dockmon-agent \
    ./cmd/agent

# Runtime stage
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1000 agent && \
    adduser -D -u 1000 -G agent agent

# Create data directory
RUN mkdir -p /data && chown agent:agent /data

WORKDIR /app

# Copy binary from builder
COPY --from=builder /build/dockmon-agent /app/dockmon-agent

# Switch to non-root user
USER agent

# Set up volume for persistent data
VOLUME ["/data"]

# Expose no ports (agent connects outbound only)

ENTRYPOINT ["/app/dockmon-agent"]
